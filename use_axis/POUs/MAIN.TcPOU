<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="MAIN" Id="{9e1c3995-83c8-4182-bd18-563ee53d3d94}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	fbAxis: FB_Axis;
	xState: E_MC_State;
	state : BYTE;	
	status : ST_AxisStatus;
	mcStatus : MC_ReadStatus;
	velo 	: LREAL;
	bRunVel	: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbAxis.Axis.ReadStatus(); //HMI := gHMI.AxisHMI_1
mcStatus(Axis := fbAxis.Axis, Enable := TRUE, Status=>status);

CASE xState OF
	MCSTATE_Init:		
		fbAxis.Enable(FALSE);		 
		IF fbAxis.Axis.Status.Error THEN
			xState := MCSTATE_Error;
		ELSE	
			xState := MCSTATE_PowerOn;
		END_IF
		
	MCSTATE_PowerOn:
		fbAxis.Enable(TRUE);
		IF fbAxis.power.Done THEN
			xState := MCSTATE_MoveRel;
		END_IF
		
	MCSTATE_Idle:		
		IF gHMI.bMoveRel THEN
			xState:= MCSTATE_MoveRel;
		END_IF										
		IF gHMI.bMoveVel THEN
			velo := gHMI.vel;		bRunVel := TRUE;			
			xState:= MCSTATE_MoveVel;  			
		END_IF
		IF gHMI.bMoveVel2 THEN
			velo := gHMI.vel2; 		bRunVel := TRUE;		
			xState:= MCSTATE_MoveVel; 				
		END_IF
		IF gHMI.bStop THEN
			xState:= MCSTATE_Stop;
		END_IF
		
	MCSTATE_MoveVel:	
		fbAxis.MoveVel(bExecute := bRunVel, Velocity := velo, Direction := MC_Positive_Direction, 						
						acceleration := 1000, Deceleration := 1500, Jerk:= 0);	
		IF fbAxis.moveVels.Active OR fbAxis.moveVels.CommandAborted THEN
			bRunvel := FALSE; 				
		END_IF
		IF gHMI.bStop THEN
			xState:= MCSTATE_Stop;
			fbAxis.Stop(bExecute := FALSE, Deceleration := 1500, Jerk:= 0);					
		END_IF
		IF gHMI.bMoveVel THEN
			velo := gHMI.vel;			bRunvel := TRUE;						
		END_IF
		IF gHMI.bMoveVel2 THEN
			velo := gHMI.vel2;			bRunvel := TRUE;						
		END_IF
		
	MCSTATE_Stop:		
		fbAxis.Stop(bExecute := TRUE, Deceleration := 1500, Jerk:= 0);
		IF fbAxis.stops.Done  THEN
			fbAxis.Stop(bExecute := FALSE, Deceleration := 1500, Jerk:= 0);			
			xState := MCSTATE_Idle;
		END_IF
				
	MCSTATE_MoveRel:
		fbAxis.MoveRel(bExecute:=TRUE,relAngle:=100);		 
		IF fbAxis.moveRels.Done THEN
			fbAxis.MoveRel(bExecute:=FALSE,relAngle:=100);	
			xState :=  MCSTATE_Stop;
		END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="57" Count="1" />
      <LineId Id="104" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="60" Count="4" />
      <LineId Id="34" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="85" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="67" Count="1" />
      <LineId Id="37" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="89" Count="1" />
      <LineId Id="101" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="149" Count="2" />
      <LineId Id="84" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="92" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>